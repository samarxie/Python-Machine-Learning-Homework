/*
Q2:
给定一颗二叉搜索树，请找出其中的第k大的结点。
例如， 5 / \ 3 7 /\ /\ 2 4 6 8 中，按结点数值大小顺序第三个结点的值为4。
------------------------------思路------------------------
注意到题目给定的是二叉搜索树，二叉搜索树按照中序遍历的节点值是递增的，
但是要注意题目要找的是第k大的节点，上面给的二叉树序列第3大的节点应该是6(而不是4)
，所以如果我们直接中序遍历，那么按顺序找第k小的节点比较容易，但是找第k大的节点反而
不容易(因为不知道有多少个节点)，除非先将二叉树遍历一遍找到总节点数，然后再找，或者
将所有节点值按顺序保存下来，然后找。这两种方法都不是最好的。既然中序遍历二叉树的节点
得到递增序列，那么如果按照先访问右子树，再访问根节点，再访问左子树的顺序，得到的序列
刚好是递减序列，然后直接计数到第k就可以得到第k大的节点了。
----------------------------伪代码--------------------------------------
// root:根节点
// find:保存找到的节点指针
// k:第k大
// index 应该初始化为0，用于计数
void find_kth_node(NODE *root,NODE *find,const int k,int &index)
{
	if(root == NULL)
		return;
	find_kth_node(root->right,find,k,index);
	index++;
	if(index == k)
	{
		find = root;
        return;
	}
	find_kth_node(root->left,find,k,index);
}
*/



